name: CI/CD for Develop (Staging)

on:
  push:
    branches:
      - develop

  pull_request:
    branches:
      - develop

jobs:
  test: # Este job se ejecutará siempre (en push y en pull_request)
    name: Run Unit & Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          # Pasamos todas las variables necesarias para construir la URI en el entorno de testing
          MONGO_USER: ${{ secrets.MONGO_USER }}
          MONGO_PWD: ${{ secrets.MONGO_PWD }}
          MONGO_DB: ${{ secrets.MONGO_DB }}
          MONGO_HOST: ${{ secrets.MONGO_HOST }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          PORT: 3000

  # --- Jobs de Despliegue ---
  # Estos jobs SÓLO deben ejecutarse en un PUSH, no en un PULL REQUEST.
  build-and-push-docker:
    name: Build and Push Docker Image
    # Condición: Ejecutar este job SÓLO si el evento fue un 'push'
    if: github.event_name == 'push' 
    needs: test # Se ejecuta solo si los tests pasan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gestion-de-reservas:develop # Etiqueta para develop

  deploy:
    name: Deploy to Render
    # Condición: Ejecutar este job SÓLO si el evento fue un 'push'
    if: github.event_name == 'push'
    needs: build-and-push-docker # Se ejecuta solo si la imagen se construyó
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deploy
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -d '{}' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_DEVELOP }}/deploys